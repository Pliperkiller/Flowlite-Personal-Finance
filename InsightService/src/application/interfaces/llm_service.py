from abc import ABC, abstractmethod
from typing import List

from src.domain.llm_models import TransactionSummary, LLMRecommendation


class LLMService(ABC):
    """Port for LLM-based recommendation generation"""
    
    @abstractmethod
    def generate_recommendations(
        self,
        transactions: List[TransactionSummary],
        max_insights: int = 5
    ) -> List[LLMRecommendation]:
        """
        Generates financial recommendations based on transaction summaries

        Args:
            transactions: List of aggregated transaction summaries
            max_insights: Maximum number of insights to generate (default: 5)

        Returns:
            List of recommendations generated by the LLM

        Raises:
            LLMServiceError: If the LLM service fails or returns invalid data
        """
        pass
