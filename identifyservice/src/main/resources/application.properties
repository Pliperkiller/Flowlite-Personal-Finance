# ===========================================
# CONFIGURACIÓN DE LA APLICACIÓN
# ===========================================
spring.application.name=identifyservice
server.port=8080

# Configuración para ngrok (detectar HTTPS automáticamente)
server.forward-headers-strategy=framework
server.use-forward-headers=true

# ===========================================
# CONFIGURACIÓN DE JWT
# ===========================================
security.jwt.secret=${JWT_SECRET:mi_clave_super_secreta_de_32_caracteres_minimo_123456789}
security.jwt.expiration=86400000
security.jwt.verification-expiration=86400000

# ===========================================
# CONFIGURACIÓN DE SWAGGER/OPENAPI
# ===========================================
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.path=/swagger-ui/index.html
springdoc.swagger-ui.enabled=true
springdoc.swagger-ui.try-it-out-enabled=true
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.tagsSorter=alpha
springdoc.swagger-ui.filter=true


# ===========================================
# CONFIGURACIÓN DE LA BASE DE DATOS
# ===========================================
spring.datasource.url=jdbc:mysql://localhost:3306/auth?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=Flowlite10+
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Configuración JPA/Hibernate
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.properties.hibernate.format_sql=true


# ======================
# GOOGLE OAUTH2
# ======================
spring.security.oauth2.client.registration.google.client-id=679071626695-l5pqvg0kf0uqmu2rtse6621qilnl834p.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=openid,profile,email
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}

# Configuración para forzar HTTPS en OAuth2
spring.security.oauth2.client.registration.google.client-authentication-method=client_secret_basic
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code

# ======================
# GITHUB OAUTH2
# ======================
#spring.security.oauth2.client.registration.github.client-id=${GITHUB_CLIENT_ID}
#spring.security.oauth2.client.registration.github.client-secret=${GITHUB_CLIENT_SECRET}
#spring.security.oauth2.client.registration.github.scope=read:user,user:email
#spring.security.oauth2.client.registration.github.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}

# ======================
# MICROSOFT OAUTH2
# (requiere proveedor explícito porque no viene predefinido en Spring)
# ======================
#spring.security.oauth2.client.registration.microsoft.client-id=${MICROSOFT_CLIENT_ID}
#spring.security.oauth2.client.registration.microsoft.client-secret=${MICROSOFT_CLIENT_SECRET}
#spring.security.oauth2.client.registration.microsoft.scope=openid,profile,email
#spring.security.oauth2.client.registration.microsoft.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
#spring.security.oauth2.client.registration.microsoft.provider=microsoft

#spring.security.oauth2.client.provider.microsoft.authorization-uri=https://login.microsoftonline.com/common/oauth2/v2.0/authorize
#spring.security.oauth2.client.provider.microsoft.token-uri=https://login.microsoftonline.com/common/oauth2/v2.0/token
#spring.security.oauth2.client.provider.microsoft.user-info-uri=https://graph.microsoft.com/oidc/userinfo
#spring.security.oauth2.client.provider.microsoft.user-name-attribute=sub

# =========================
# Facebook (predefinido)
# =========================
#spring.security.oauth2.client.registration.facebook.client-id=${FACEBOOK_CLIENT_ID}
#spring.security.oauth2.client.registration.facebook.client-secret=${FACEBOOK_CLIENT_SECRET}
#spring.security.oauth2.client.registration.facebook.scope=email,public_profile
#spring.security.oauth2.client.registration.facebook.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}

# ===========================================
# CONFIGURACIÓN DE REDIS PARA BLACKLIST
# ===========================================
spring.data.redis.host=${SPRING_DATA_REDIS_HOST:localhost}
spring.data.redis.port=${SPRING_DATA_REDIS_PORT:6379}
spring.data.redis.database=${SPRING_DATA_REDIS_DATABASE:0}
spring.data.redis.timeout=${SPRING_DATA_REDIS_TIMEOUT:2000ms}
spring.data.redis.jedis.pool.max-active=8
spring.data.redis.jedis.pool.max-idle=8
spring.data.redis.jedis.pool.min-idle=0
spring.data.redis.jedis.pool.max-wait=2000ms

# Configuración de cache
spring.cache.type=redis
spring.cache.redis.time-to-live=86400000
spring.cache.redis.cache-null-values=false

# ===========================================
# CONFIGURACIÓN DE ESTRATEGIA DE REVOCACIÓN
# ===========================================
# Estrategias disponibles: in-memory, redis
app.token-revocation.strategy=redis

# ===========================================
# CONFIGURACIÓN DE EMAIL (MAILHOG POR DEFECTO)
# ===========================================
# Configuración por defecto para desarrollo con MailHog
spring.mail.host=${MAIL_HOST:localhost}
spring.mail.port=${MAIL_PORT:1025}
spring.mail.username=${MAIL_USERNAME:}
spring.mail.password=${MAIL_PASSWORD:}
spring.mail.properties.mail.smtp.auth=false
spring.mail.properties.mail.smtp.starttls.enable=false
spring.mail.properties.mail.smtp.ssl.trust=localhost

# Configuración de la aplicación para emails
app.email.provider=${APP_EMAIL_PROVIDER:mailhog}
app.email.from=${APP_EMAIL_FROM:noreply@flowlite.local}
app.email.verification-url=${APP_EMAIL_VERIFICATION_URL:http://localhost:8080/auth/verify}

# ===========================================
# CONFIGURACIÓN DE EMAIL PARA PRODUCCIÓN
# ===========================================
# Para usar Gmail en producción, configura estas variables de entorno:
# MAIL_HOST=smtp.gmail.com
# MAIL_PORT=587
# MAIL_USERNAME=tu-email@gmail.com
# MAIL_PASSWORD=tu-contraseña-de-aplicacion
# APP_EMAIL_FROM=noreply@flowlite.com

# ===========================================
# CONFIGURACIÓN DE REGISTRO
# ===========================================
# Habilitar/deshabilitar métodos de registro
app.registration.direct-enabled=${REGISTRATION_DIRECT_ENABLED:true}
app.registration.preregister-enabled=${REGISTRATION_PREREGISTER_ENABLED:true}
app.registration.oauth2-enabled=${REGISTRATION_OAUTH2_ENABLED:true}

# ===========================================
# CONFIGURACIÓN DE CÓDIGOS DE VERIFICACIÓN
# ===========================================
# Configuración para códigos de verificación de recuperación de contraseña
app.verification-code.expiration-minutes=${VERIFICATION_CODE_EXPIRATION_MINUTES:5}
app.verification-code.max-attempts=${VERIFICATION_CODE_MAX_ATTEMPTS:3}

# ===========================================
# CONFIGURACIÓN DE RECUPERACIÓN DE CONTRASEÑA
# ===========================================
# Configuración para recuperación de contraseña
app.password-recovery.expiration-hours=${PASSWORD_RECOVERY_EXPIRATION_HOURS:24}
app.password-recovery.base-url=${PASSWORD_RECOVERY_BASE_URL:http://localhost:8080}

# Configuración de flujos de recuperación
app.password-recovery.traditional-flow-enabled=${PASSWORD_RECOVERY_TRADITIONAL_ENABLED:false}
app.password-recovery.code-flow-enabled=${PASSWORD_RECOVERY_CODE_ENABLED:true}

# ===========================================
# CONFIGURACIÓN DE JACKSON
# ===========================================
# Habilitar soporte para Java 8 time types
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.deserialization.fail-on-unknown-properties=false

# ===========================================
# CONFIGURACIÓN DE LOGGING
# ===========================================
# Habilitar logs de debug para troubleshooting
logging.level.com.flowlite.identifyservice.infrastructure.persistence.redis=DEBUG
logging.level.com.flowlite.identifyservice.application.services.PasswordRecoveryCodeService=DEBUG

# ===========================================
# CONFIGURACIÓN DE SPRING BOOT ACTUATOR
# ===========================================
# Habilitar endpoints de Actuator
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=when-authorized
management.endpoint.health.show-components=always
management.health.redis.enabled=true
management.health.db.enabled=true
